---
import { Cloudinary } from "@cloudinary/url-gen";
import { Image } from "astro:assets";
import { fill } from "@cloudinary/url-gen/actions/resize";
import { CLOUDINARY_CLOUD_NAME, CLOUDINARY_ROOT_FOLDER } from "../consts";

interface Props {
  publicId: string;
  width: number;
  height: number;
  authorOfImg?: string;
  classImg?: string;
  classWrapper?: string;
  alt?: string;
}

const { publicId, width, height, authorOfImg, alt, classImg, classWrapper } = Astro.props;

const cld = new Cloudinary({
  cloud: {
    cloudName: CLOUDINARY_CLOUD_NAME,
  },
});
const image = cld.image(`${CLOUDINARY_ROOT_FOLDER}/${publicId}`);
const imgResize = image.resize(fill());
---

<div class:list={["tw-flex tw-justify-center tw-flex-col", classWrapper]}>
  <Image
    src={imgResize.toURL()}
    width={width}
    height={height}
    alt={alt ?? "image"}
    class:list={["tw-self-center", classImg]}
  />
  {
    authorOfImg && (
      <span class="tw-inline-block tw-text-center tw-text-xs tw-font-medium tw-mt-1 tw-text-gray-600">
        photo by: {authorOfImg}
      </span>
    )
  }
</div>
